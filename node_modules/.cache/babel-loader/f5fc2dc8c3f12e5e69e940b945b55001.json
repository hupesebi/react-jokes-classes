{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianhupe/Desktop/Springboard/React/react-jokes-classes/src/JokeList.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  async getJokes() {\n    try {\n      let jokes = this.state.jokes;\n      let seenJokes = new Set(jokes.map(j => j.id));\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...joke\n        } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({ ...joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState(st => ({\n      jokes: st.jokes.filter(j => j.locked)\n    }));\n  }\n\n  vote(id, delta) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/Users/sebastianhupe/Desktop/Springboard/React/react-jokes-classes/src/JokeList.js"],"names":["React","axios","Joke","JokeList","Component","constructor","props","state","jokes","generateNewJokes","bind","vote","componentDidMount","length","numJokesToGet","getJokes","componentDidUpdate","seenJokes","Set","map","j","id","res","get","headers","Accept","status","joke","data","has","add","push","votes","console","log","setState","e","st","filter","locked","delta","render","sortedJokes","sort","a","b","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  static defaultProps = {\n    numJokesToGet: 10,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { jokes: [] };\n\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  async getJokes() {\n    try {\n      let jokes = this.state.jokes;\n      let seenJokes = new Set(jokes.map((j) => j.id));\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n        let { status, ...joke } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({ ...joke, votes: 0 });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n\n      this.setState({ jokes });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState((st) => ({ jokes: st.jokes.filter((j) => j.locked) }));\n  }\n\n  vote(id, delta) {\n    this.setState((st) => ({\n      jokes: st.jokes.map((j) =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      ),\n    }));\n  }\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return (\n      <div className=\"JokeList\">\n        <button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n          Get New Jokes\n        </button>\n\n        {sortedJokes.map((j) => (\n          <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            votes={j.votes}\n            vote={this.vote}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default JokeList;"]},"metadata":{},"sourceType":"module"}